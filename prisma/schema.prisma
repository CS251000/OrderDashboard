generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Order {
  sno               Int        @default(autoincrement())
  channelId         Int?
  channelName       String?
  baseChannelCode   String?
  channelOrderId    String     @id
  customerName      String?
  customerEmail     String?
  customerPhone     String?
  customerAddress   String?
  customerAddress2  String?
  customerCity      String?
  customerState     String?
  customerPincode   String?
  customerCountry   String?
  pickupLocation    String?
  paymentStatus     String?
  total             Float?
  tax               Float?
  sla               String?
  shippingMethod    String?
  expedited         Boolean?
  status            String?
  statusCode        Int?
  paymentMethod     String?
  isInternational   Boolean?
  purposeOfShipment Int?
  channelCreatedAt  DateTime?
  createdAt         DateTime?
  allowReturn       Boolean?
  isIncomplete      Boolean?
  errors            String[]
  showEscalationBtn Boolean?
  escalationStatus  String?
  escalationHistory String[]
  id                Int?
  activities        Activity[]
  products          Product[]
  shipments         Shipment[]
}

model Product {
  id                    Int     @id @default(autoincrement())
  channelOrderProductId String?
  name                  String?
  channelSku            String?
  quantity              Int?
  productId             Int?
  available             Int?
  status                String?
  hsn                   String?
  orderId               String?
  order                 Order?  @relation(fields: [orderId], references: [channelOrderId], onDelete: Cascade)
}

model Shipment {
  id                  Int       @id @default(autoincrement())
  isdCode             String?
  courier             String?
  weight              Float?
  dimensions          String?
  pickupScheduledDate DateTime?
  pickupTokenNumber   String?
  awb                 String?
  returnAwb           String?
  volumetricWeight    Float?
  pod                 String?
  etd                 String?
  rtoDeliveredDate    DateTime?
  deliveredDate       DateTime?
  etdEscalationBtn    Boolean?
  orderId             String?
  order               Order?    @relation(fields: [orderId], references: [channelOrderId], onDelete: Cascade)
}

model Activity {
  id      Int     @id @default(autoincrement())
  action  String?
  orderId String?
  order   Order?  @relation(fields: [orderId], references: [channelOrderId], onDelete: Cascade)
}

model User {
  id    Int    @id @default(autoincrement())
  name  String
  email String @unique
}
